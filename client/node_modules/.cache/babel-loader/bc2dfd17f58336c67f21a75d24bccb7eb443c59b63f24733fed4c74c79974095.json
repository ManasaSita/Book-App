{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useAuth}from'../context/AuthContext';import{fetchFriends}from'../services/api';import Chat from'./Chat';// Import the Chat component\nimport Notification from'./Notification';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatPage=()=>{const[friends,setFriends]=useState([]);const[selectedFriend,setSelectedFriend]=useState();const[isChatOpen,setIsChatOpen]=useState(false);const senderId=useAuth().user.payload.user.id;const[showNotification,setShowNotification]=useState(false);useEffect(()=>{const fetchFriendsData=async()=>{try{const response=await fetchFriends(senderId);setFriends(response);}catch(error){console.error('Error fetching friends:',error);}};fetchFriendsData();},[]);const handleFriendClick=friend=>{setSelectedFriend(friend);setIsChatOpen(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"friends-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"friends-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Friends List\"}),/*#__PURE__*/_jsx(\"ul\",{children:friends.map(friend=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleFriendClick(friend),className:friend===selectedFriend?'selected-friend':'',children:friend.username},friend._id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"friend-profile-or-chat\",children:isChatOpen?/*#__PURE__*/_jsx(Chat,{friend:selectedFriend}):/*#__PURE__*/_jsx(\"p\",{children:\"Select a friend to start chatting\"})})]});};export default ChatPage;","map":{"version":3,"names":["React","useEffect","useState","useAuth","fetchFriends","Chat","Notification","jsx","_jsx","jsxs","_jsxs","ChatPage","friends","setFriends","selectedFriend","setSelectedFriend","isChatOpen","setIsChatOpen","senderId","user","payload","id","showNotification","setShowNotification","fetchFriendsData","response","error","console","handleFriendClick","friend","className","children","map","onClick","username","_id"],"sources":["/home/manasa/Projects/UpGrad/Project/bookShelf/client/src/components/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { fetchFriends } from '../services/api';\nimport Chat from './Chat';  // Import the Chat component\nimport Notification from './Notification';\n\nconst ChatPage = () => {\n  const [friends, setFriends] = useState([]);\n  const [selectedFriend, setSelectedFriend] = useState();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const senderId = useAuth().user.payload.user.id;\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const fetchFriendsData = async () => {\n      try {\n        const response = await fetchFriends(senderId);\n        setFriends(response);\n      } catch (error) {\n        console.error('Error fetching friends:', error);\n      }\n    };\n\n    fetchFriendsData();\n  }, []);\n\n  const handleFriendClick = (friend) => {\n    setSelectedFriend(friend);\n    setIsChatOpen(true);\n  };\n\n  return (\n    <div className=\"friends-container\">\n      <div className=\"friends-list\">\n        <h2>Friends List</h2>\n        <ul>\n          {friends.map(friend => (\n            <li\n              key={friend._id}\n              onClick={() => handleFriendClick(friend)}\n              className={friend === selectedFriend ? 'selected-friend' : ''}\n            >\n              {friend.username}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"friend-profile-or-chat\">\n        {isChatOpen ? (\n          <Chat friend={selectedFriend} />\n        ) : (\n          <p>Select a friend to start chatting</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,OAAO,KAAQ,wBAAwB,CAChD,OAASC,YAAY,KAAQ,iBAAiB,CAC9C,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAG;AAC5B,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACY,cAAc,CAAEC,iBAAiB,CAAC,CAAGb,QAAQ,CAAC,CAAC,CACtD,KAAM,CAACc,UAAU,CAAEC,aAAa,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAAgB,QAAQ,CAAGf,OAAO,CAAC,CAAC,CAACgB,IAAI,CAACC,OAAO,CAACD,IAAI,CAACE,EAAE,CAC/C,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAE/DD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArB,YAAY,CAACc,QAAQ,CAAC,CAC7CL,UAAU,CAACY,QAAQ,CAAC,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAEDF,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,iBAAiB,CAAIC,MAAM,EAAK,CACpCd,iBAAiB,CAACc,MAAM,CAAC,CACzBZ,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,mBACEP,KAAA,QAAKoB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCrB,KAAA,QAAKoB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BvB,IAAA,OAAAuB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBvB,IAAA,OAAAuB,QAAA,CACGnB,OAAO,CAACoB,GAAG,CAACH,MAAM,eACjBrB,IAAA,OAEEyB,OAAO,CAAEA,CAAA,GAAML,iBAAiB,CAACC,MAAM,CAAE,CACzCC,SAAS,CAAED,MAAM,GAAKf,cAAc,CAAG,iBAAiB,CAAG,EAAG,CAAAiB,QAAA,CAE7DF,MAAM,CAACK,QAAQ,EAJXL,MAAM,CAACM,GAKV,CACL,CAAC,CACA,CAAC,EACF,CAAC,cAEN3B,IAAA,QAAKsB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CACpCf,UAAU,cACTR,IAAA,CAACH,IAAI,EAACwB,MAAM,CAAEf,cAAe,CAAE,CAAC,cAEhCN,IAAA,MAAAuB,QAAA,CAAG,mCAAiC,CAAG,CACxC,CACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}