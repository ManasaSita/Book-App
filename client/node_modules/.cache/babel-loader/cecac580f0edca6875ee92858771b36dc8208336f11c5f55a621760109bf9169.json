{"ast":null,"code":"var _jsxFileName = \"/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { sendMessage, fetchMessages } from '../services/api'; // API calls for sending and fetching messages\nimport io from 'socket.io-client'; // Import Socket.IO client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Connect to Socket.IO server\n\nconst Chat = ({\n  friend\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const sender = useAuth().user.payload.user.username;\n  const senderId = useAuth().user.payload.user.id;\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        const fetchedMessages = await fetchMessages(senderId, friend._id);\n        setMessages(fetchedMessages);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    loadMessages();\n\n    // Listen for incoming messages\n    socket.on('receive_message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Clean up the listener when the component unmounts\n    return () => {\n      socket.off('receive_message');\n    };\n  }, [friend._id, senderId]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    try {\n      const messageData = {\n        senderId: senderId,\n        receiverId: friend._id,\n        content: newMessage\n      };\n      const sentMessage = await sendMessage(messageData);\n      setMessages(prevMessages => [...prevMessages, sentMessage]);\n      setNewMessage('');\n\n      // Emit the message to the server\n      socket.emit('send_message', messageData);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with \", friend.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.senderId === senderId ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.senderId === senderId ? sender : friend.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"send-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"C2E+TS24XBi+hOJqm8lTU4mM5yA=\", false, function () {\n  return [useAuth, useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","sendMessage","fetchMessages","io","jsxDEV","_jsxDEV","socket","Chat","friend","_s","messages","setMessages","newMessage","setNewMessage","sender","user","payload","username","senderId","id","loadMessages","fetchedMessages","_id","error","console","on","message","prevMessages","off","handleSendMessage","e","preventDefault","messageData","receiverId","content","sentMessage","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { sendMessage, fetchMessages } from '../services/api'; // API calls for sending and fetching messages\nimport io from 'socket.io-client'; // Import Socket.IO client\n\nconst socket = io('http://localhost:5000'); // Connect to Socket.IO server\n\nconst Chat = ({ friend }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const sender = useAuth().user.payload.user.username;\n  const senderId = useAuth().user.payload.user.id;\n\n  useEffect(() => {\n    const loadMessages = async () => {\n      try {\n        const fetchedMessages = await fetchMessages(senderId, friend._id);\n        setMessages(fetchedMessages);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n\n    loadMessages();\n\n    // Listen for incoming messages\n    socket.on('receive_message', (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    // Clean up the listener when the component unmounts\n    return () => {\n      socket.off('receive_message');\n    };\n  }, [friend._id, senderId]);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    try {\n      const messageData = { senderId: senderId, receiverId: friend._id, content: newMessage };\n      const sentMessage = await sendMessage(messageData);\n      setMessages((prevMessages) => [...prevMessages, sentMessage]);\n      setNewMessage('');\n\n      // Emit the message to the server\n      socket.emit('send_message', messageData);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2>Chat with {friend.username}</h2>\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.senderId === senderId ? 'sent' : 'received'}`}\n          >\n            <strong>\n              {message.senderId === senderId ? sender : friend.username}:\n            </strong>\n            <span className=\"message-content\">{message.content}</span>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSendMessage} className=\"send-message-form\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n          required\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}