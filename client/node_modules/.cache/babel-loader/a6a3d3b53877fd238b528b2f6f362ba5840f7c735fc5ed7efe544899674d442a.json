{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the token in all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const searchBooks = async query => {\n  try {\n    const response = await api.get(`/search-books?q=${encodeURIComponent(query)}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error searching books:', error);\n    throw error;\n  }\n};\n\n// Friend requests\nexport const sendFriendRequest = async (receiverId, senderId) => {\n  const response = await api.post('/auth/friends/send', {\n    receiverId,\n    senderId\n  });\n  return response.data;\n};\nexport const fetchFriendRequests = async () => {\n  const response = await api.get('/auth/friends/requests');\n  return response.data;\n};\nexport const respondToFriendRequest = async (senderId, requestId, action) => {\n  console.log(\"respondToFriendRequest----------api-------\", senderId, requestId, action);\n  const endpoint = action === 'accept' ? '/auth/friends/accept' : '/auth/friends/decline';\n  const response = await api.post(endpoint, {\n    senderId,\n    requestId,\n    action\n  });\n  return response.data;\n};\nexport const fetchFriends = async () => {\n  const response = await api.get('/auth/friends');\n  console.log(\"fetchFriends-----\", response);\n  return response.data;\n};\nexport const searchUsers = async username => {\n  const response = await api.get(`/auth/search?username=${username}`);\n  return response.data;\n};\n\n//Friend profile\nexport const getFriendDetails = async friendId => {\n  console.log(\"getFriendDetails-----------api------\", friendId);\n  const response = await api.get(`/auth/friends/${friendId}`);\n  return response;\n};\nexport const postComment = async commentData => {\n  const response = await axios.post(`/api/comments`, commentData);\n  return response.data.comments; // Return updated comments\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","searchBooks","query","response","get","encodeURIComponent","data","console","sendFriendRequest","receiverId","senderId","post","fetchFriendRequests","respondToFriendRequest","requestId","action","log","endpoint","fetchFriends","searchUsers","username","getFriendDetails","friendId","postComment","commentData","comments"],"sources":["/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to include the token in all requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['x-auth-token'] = token;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport const searchBooks = async (query) => {\n  try {\n    const response = await api.get(`/search-books?q=${encodeURIComponent(query)}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error searching books:', error);\n    throw error;\n  }\n};\n\n// Friend requests\nexport const sendFriendRequest = async (receiverId, senderId) => {\n    const response = await api.post('/auth/friends/send', { receiverId, senderId });\n    return response.data;\n};\n\nexport const fetchFriendRequests = async () => {\n    const response = await api.get('/auth/friends/requests');\n    return response.data;\n};\n\nexport const respondToFriendRequest = async (senderId, requestId, action) => {\n    console.log(\"respondToFriendRequest----------api-------\", senderId, requestId, action);\n\n    const endpoint = action === 'accept' ? '/auth/friends/accept' : '/auth/friends/decline';\n    const response = await api.post(endpoint, { senderId,requestId, action });\n    return response.data;\n};\n\nexport const fetchFriends = async () => {\n    const response = await api.get('/auth/friends');\n    console.log(\"fetchFriends-----\", response);\n\n    return response.data;\n};\n\nexport const searchUsers = async (username) => {\n    const response = await api.get(`/auth/search?username=${username}`);\n    return response.data;\n};\n\n//Friend profile\nexport const getFriendDetails = async (friendId) => {\n    console.log(\"getFriendDetails-----------api------\", friendId);\n\n    const response = await api.get(`/auth/friends/${friendId}`); \n    return response;\n};\n\nexport const postComment = async (commentData) => {\n    const response = await axios.post(`/api/comments`, commentData);\n    return response.data.comments; // Return updated comments\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}