{"ast":null,"code":"import React,{useEffect,useState}from'react';import{getFriendDetails,postComment,deleteComment,searchBooks,addBookFromSearch}from'../services/api';import{useAuth}from'../context/AuthContext';import Notification from'./Notification';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FriendProfile=_ref=>{var _user$payload;let{friendId}=_ref;const{user}=useAuth();const userData=user===null||user===void 0?void 0:(_user$payload=user.payload)===null||_user$payload===void 0?void 0:_user$payload.user;const[friendDetails,setFriendDetails]=useState(null);const[books,setBooks]=useState([]);const[comments,setComments]=useState([]);const[newComment,setNewComment]=useState('');const[filter,setFilter]=useState('all');const[suggestBookQuery,setSuggestBookQuery]=useState('');const[suggestBookResults,setSuggestBookResults]=useState([]);const[isSuggestingBook,setIsSuggestingBook]=useState(false);const[showNotification,setShowNotification]=useState(false);// console.log(\"userData-------\",  userData);\nuseEffect(()=>{const fetchFriendDetails=async()=>{try{var _details$friendProfil;const details=await getFriendDetails(friendId);setFriendDetails(details.friendProfile);setBooks(details.detailedBooks);const sortedComments=((_details$friendProfil=details.friendProfile)===null||_details$friendProfil===void 0?void 0:_details$friendProfil.comments.sort((a,b)=>new Date(a.createdAt)-new Date(b.createdAt)))||[];setComments(sortedComments);}catch(error){console.error('Error fetching friend details:',error);}};fetchFriendDetails();setFilter('all');},[friendId]);const handleCommentSubmit=async e=>{e.preventDefault();try{const commentData={commenterId:userData.id,friendId,text:newComment};const response=await postComment(commentData);if(response&&response.commentsWithUsernames){const sortedComments=response.commentsWithUsernames.sort((a,b)=>new Date(a.createdAt)-new Date(b.createdAt))||[];setComments(sortedComments);// Replace entire comments array with the updated one\n}else{// Fallback: optimistically add the new comment\nconst newCommentAdded={_id:Date.now(),// Temporary ID, can be replaced with actual ID from backend\ncommenter:userData._id,commenterUsername:userData.username,content:newComment,createdAt:new Date().toISOString()// Assuming server returns ISO dates\n};setComments(prevComments=>[...prevComments,newCommentAdded]);}setNewComment('');}catch(error){console.error('Error posting comment:',error);}};const handleDeleteComment=async commentId=>{try{// Optimistically update the UI\nawait deleteComment({userId:userData.id,friendId,commentId});setComments(prevComments=>prevComments.filter(comment=>comment._id!==commentId));}catch(error){console.error('Error deleting comment:',error);// Optionally: Revert UI if deletion fails (not implemented here)\n}};const handleSuggestBookSearch=async()=>{try{const results=await searchBooks(suggestBookQuery);setSuggestBookResults(results);}catch(error){console.error('Error searching books:',error);}};const handleSuggestBook=async book=>{try{const bookLink=`/books/${book.id}`;const commentText=`I suggest you read [${book.volumeInfo.title}](${bookLink})`;const commentData={commenterId:userData.id,friendId:friendId,text:commentText};await postComment(commentData);setComments(prevComments=>[...prevComments,{commenterUsername:userData.username,content:commentText}]);setSuggestBookQuery('');setSuggestBookResults([]);setIsSuggestingBook(false);}catch(error){console.error('Error suggesting book:',error);}};const handleAddBookToMyCollection=async book=>{try{const addedBook=await addBookFromSearch({title:book.title,author:book.author,description:book.description,thumbnail:book.thumbnail,averageRating:book.averageRating||null,pageCount:book.pageCount||null},userData.id);setShowNotification(true);setTimeout(()=>setShowNotification(false),3000);console.log('Book added to your collection:',addedBook);}catch(error){console.error('Error adding book to collection:',error);}};const handleClearSearch=()=>{setSuggestBookQuery('');setSuggestBookResults([]);setIsSuggestingBook(false);};if(!friendDetails){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading friend details...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"friend-profile\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-header\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"name\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[friendDetails.username,\"'s Profile \"]})}),/*#__PURE__*/_jsx(\"p\",{className:\"email\",children:friendDetails.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilter('all'),className:filter==='all'?'active':'',children:\"All Books\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilter('currently-reading'),className:filter==='currently-reading'?'active':'',children:\"Currently Reading\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilter('read'),className:filter==='read'?'active':'',children:\"Finished Reading\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"book-grid\",children:books.length>0?books.filter(book=>{if(filter==='all')return true;return book.status===filter;}).map(book=>/*#__PURE__*/_jsxs(\"div\",{className:\"book\",children:[book.thumbnail?/*#__PURE__*/_jsx(\"img\",{src:book.thumbnail,alt:book.title}):/*#__PURE__*/_jsx(\"img\",{src:\"/book_thumbnail.jpg\",alt:book.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title-author\",children:[/*#__PURE__*/_jsx(\"p\",{className:\" title no-margin \",children:book.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"author no-margin\",children:[\"by \",book.author]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"book-actions\",children:[book.status==='currently-reading'?/*#__PURE__*/_jsx(\"p\",{className:\"no-margin\",children:\"Currently Reading\"}):book.status==='read'?/*#__PURE__*/_jsx(\"p\",{children:\"Finished Reading!\"}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(\"button\",{className:\"add-to-collection\",onClick:()=>handleAddBookToMyCollection(book),children:\"Add to My Collection\"}),showNotification&&/*#__PURE__*/_jsx(Notification,{message:\"Book added to your collection!\",onClose:()=>setShowNotification(false)})]})]})]},book._id)):/*#__PURE__*/_jsx(\"p\",{children:\"No books added yet.\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"comments-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comments\"}),/*#__PURE__*/_jsx(\"div\",{className:\"comments-list\",children:comments.length>0?/*#__PURE__*/_jsx(\"ul\",{children:comments.map((comment,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"comment\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"commenter-name\",children:comment.commenterUsername}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:comment.content}),comment.commenter===userData.id&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteComment(comment._id),children:\"Delete\"})]})]},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"No Comments Yet!\"})}),isSuggestingBook&&/*#__PURE__*/_jsxs(\"div\",{className:\"suggest-book-section\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:suggestBookQuery,onChange:e=>setSuggestBookQuery(e.target.value),placeholder:\"Search for books to suggest...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSuggestBookSearch,children:\"Search\"}),suggestBookResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"search-results\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-results-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Search Results\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:handleClearSearch,children:\"X\"})]}),suggestBookResults.map(book=>{var _book$volumeInfo$imag;return/*#__PURE__*/_jsxs(\"div\",{className:\"book-card\",children:[/*#__PURE__*/_jsx(\"img\",{src:(_book$volumeInfo$imag=book.volumeInfo.imageLinks)===null||_book$volumeInfo$imag===void 0?void 0:_book$volumeInfo$imag.thumbnail,alt:book.volumeInfo.title}),/*#__PURE__*/_jsx(\"p\",{children:book.volumeInfo.title}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSuggestBook(book),children:\"Suggest this Book\"})]},book.id);})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"comment-form\",onSubmit:handleCommentSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"comment-text\",value:newComment,onChange:e=>setNewComment(e.target.value),placeholder:\"Leave a comment...\",rows:\"3\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Post Comment\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setIsSuggestingBook(!isSuggestingBook),children:\"Suggest a Book\"})]})]})]});};export default FriendProfile;","map":{"version":3,"names":["React","useEffect","useState","getFriendDetails","postComment","deleteComment","searchBooks","addBookFromSearch","useAuth","Notification","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FriendProfile","_ref","_user$payload","friendId","user","userData","payload","friendDetails","setFriendDetails","books","setBooks","comments","setComments","newComment","setNewComment","filter","setFilter","suggestBookQuery","setSuggestBookQuery","suggestBookResults","setSuggestBookResults","isSuggestingBook","setIsSuggestingBook","showNotification","setShowNotification","fetchFriendDetails","_details$friendProfil","details","friendProfile","detailedBooks","sortedComments","sort","a","b","Date","createdAt","error","console","handleCommentSubmit","e","preventDefault","commentData","commenterId","id","text","response","commentsWithUsernames","newCommentAdded","_id","now","commenter","commenterUsername","username","content","toISOString","prevComments","handleDeleteComment","commentId","userId","comment","handleSuggestBookSearch","results","handleSuggestBook","book","bookLink","commentText","volumeInfo","title","handleAddBookToMyCollection","addedBook","author","description","thumbnail","averageRating","pageCount","setTimeout","log","handleClearSearch","children","className","email","onClick","length","status","map","src","alt","message","onClose","index","type","value","onChange","target","placeholder","_book$volumeInfo$imag","imageLinks","onSubmit","rows","required"],"sources":["/home/manasa/Projects/UpGrad/Project/bookShelf/client/src/components/FriendProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getFriendDetails, postComment, deleteComment, searchBooks, addBookFromSearch } from '../services/api'; \nimport { useAuth } from '../context/AuthContext';\nimport Notification from './Notification';\n\nconst FriendProfile = ({ friendId }) => {\n  const { user } = useAuth(); \n  const userData= user?.payload?.user;\n  const [friendDetails, setFriendDetails] = useState(null);\n  const [books, setBooks] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [suggestBookQuery, setSuggestBookQuery] = useState('');\n  const [suggestBookResults, setSuggestBookResults] = useState([]);\n  const [isSuggestingBook, setIsSuggestingBook] = useState(false);\n  const [showNotification, setShowNotification] = useState(false);\n\n  // console.log(\"userData-------\",  userData);\n  \n\n  useEffect(() => {\n    const fetchFriendDetails = async () => {\n      try {\n        const details = await getFriendDetails(friendId);\n        setFriendDetails(details.friendProfile);\n        setBooks(details.detailedBooks);\n        const sortedComments = details.friendProfile?.comments.sort((a, b) => \n          new Date(a.createdAt) - new Date(b.createdAt)\n        ) || [];\n        setComments(sortedComments);\n      } catch (error) {\n        console.error('Error fetching friend details:', error);\n      }\n    };\n  \n    fetchFriendDetails();\n    setFilter('all');\n  }, [friendId]);\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const commentData = { commenterId: userData.id, friendId, text: newComment }; \n      const response = await postComment(commentData);\n        \n      if (response && response.commentsWithUsernames) {\n        const sortedComments = response.commentsWithUsernames.sort((a, b) => \n          new Date(a.createdAt) - new Date(b.createdAt)\n        ) || [];\n        setComments(sortedComments); // Replace entire comments array with the updated one\n      } else {\n        // Fallback: optimistically add the new comment\n        const newCommentAdded = {\n          _id: Date.now(), // Temporary ID, can be replaced with actual ID from backend\n          commenter: userData._id,\n          commenterUsername: userData.username,\n          content: newComment,\n          createdAt: new Date().toISOString(), // Assuming server returns ISO dates\n        };\n        setComments(prevComments => [...prevComments, newCommentAdded]);\n      }\n      \n      setNewComment('');\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  \n  const handleDeleteComment = async (commentId) => {\n    try {\n      // Optimistically update the UI\n      await deleteComment({userId: userData.id, friendId, commentId});\n      setComments(prevComments => prevComments.filter(comment => comment._id !== commentId));  \n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      // Optionally: Revert UI if deletion fails (not implemented here)\n    }\n  };  \n\n  const handleSuggestBookSearch = async () => {\n    try {\n      const results = await searchBooks(suggestBookQuery);\n      setSuggestBookResults(results);\n    } catch (error) {\n      console.error('Error searching books:', error);\n    }\n  };\n\n  const handleSuggestBook = async (book) => {\n    try {\n      const bookLink = `/books/${book.id}`;\n      const commentText = `I suggest you read [${book.volumeInfo.title}](${bookLink})`;\n\n      const commentData = { \n        commenterId: userData.id, \n        friendId: friendId, \n        text: commentText \n      };\n\n      await postComment(commentData);\n\n      setComments(prevComments => [...prevComments, { \n        commenterUsername: userData.username, \n        content: commentText \n      }]);\n\n      setSuggestBookQuery('');\n      setSuggestBookResults([]);\n      setIsSuggestingBook(false);\n\n    } catch (error) {\n      console.error('Error suggesting book:', error);\n    }\n  };\n\n  const handleAddBookToMyCollection = async (book) => {\n    try {\n      const addedBook = await addBookFromSearch({\n        title: book.title,\n        author: book.author,\n        description: book.description,\n        thumbnail: book.thumbnail,\n        averageRating: book.averageRating || null,\n        pageCount: book.pageCount || null,\n      }, userData.id);\n      setShowNotification(true);\n      setTimeout(() => setShowNotification(false), 3000);\n      console.log('Book added to your collection:', addedBook);\n    } catch (error) {\n      console.error('Error adding book to collection:', error);\n    }\n  };\n\n  const handleClearSearch = () => {\n    setSuggestBookQuery('');\n    setSuggestBookResults([]);\n    setIsSuggestingBook(false);\n  };\n\n  if (!friendDetails) {\n    return <p>Loading friend details...</p>;\n  }\n\n  return (\n    <div className='friend-profile'>\n      <div className='profile-header'>\n        <p className='name'><strong>{friendDetails.username}'s Profile </strong></p>\n        <p className='email'>{friendDetails.email}</p>\n      </div>\n      \n      <div className=\"filter-buttons\">\n        <button\n          onClick={() => setFilter('all')}\n          className={filter === 'all' ? 'active' : ''}\n        >\n          All Books\n        </button>\n        <button\n          onClick={() => setFilter('currently-reading')}\n          className={filter === 'currently-reading' ? 'active' : ''}\n        >\n          Currently Reading\n        </button>\n        <button\n          onClick={() => setFilter('read')}\n          className={filter === 'read' ? 'active' : ''}\n        >\n          Finished Reading\n        </button>\n      </div>\n\n      <div className='book-grid'>\n        {books.length > 0 ? (\n          books.filter(book => {\n            if (filter === 'all') return true;\n            return book.status === filter;\n          }).map(book => (\n            <div key={book._id} className='book'>\n              {book.thumbnail ? (\n                <img src={book.thumbnail} alt={book.title} />\n              ) : (\n                <img src=\"/book_thumbnail.jpg\" alt={book.title} />\n              )}\n              <div className='details'>\n                <div className='title-author'>\n                  <p className=' title no-margin '>{book.title}</p>\n                  <p className='author no-margin'>by {book.author}</p>\n                </div>\n                \n                <div className=\"book-actions\">\n                  {book.status === 'currently-reading' ? (\n                    <p className='no-margin'>Currently Reading</p>\n                  ) : book.status === 'read' ? (\n                    <p>Finished Reading!</p>\n                  ) : (\n                    <></>\n                  )}\n                  {/* Add to My Collection Button */}\n                  <button className='add-to-collection' onClick={() => handleAddBookToMyCollection(book)}>Add to My Collection</button>\n                  {showNotification && (\n                    <Notification\n                      message=\"Book added to your collection!\"\n                      onClose={() => setShowNotification(false)}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No books added yet.</p>\n        )}\n      </div>\n\n      <div className=\"comments-section\">\n        <h3>Comments</h3>\n        <div className='comments-list'>\n          {comments.length > 0 ? (\n            <ul>\n              {comments.map((comment, index) => (\n                <li key={index} className='comment'>\n                  <p className='commenter-name'>{comment.commenterUsername}</p>\n                  <div className='comment-content'>\n                    <p>{comment.content}</p>\n                    {comment.commenter === userData.id && (\n                      <button onClick={() => handleDeleteComment(comment._id)}>Delete</button>\n                    )}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No Comments Yet!</p>\n          )}\n        </div>\n\n\n        {/* Suggest a Book Section */}\n        {isSuggestingBook && (\n          <div className=\"suggest-book-section\">\n            <input\n              type=\"text\"\n              value={suggestBookQuery}\n              onChange={(e) => setSuggestBookQuery(e.target.value)}\n              placeholder=\"Search for books to suggest...\"\n            />\n            <button onClick={handleSuggestBookSearch}>Search</button>\n\n            {suggestBookResults.length > 0 && (\n              <div className=\"search-results\">\n                <div className=\"search-results-header\">\n                  <h3>Search Results</h3>\n                  <button className=\"close-button\" onClick={handleClearSearch}>X</button>\n                </div>\n                {suggestBookResults.map(book => (\n                  <div key={book.id} className=\"book-card\">\n                    <img src={book.volumeInfo.imageLinks?.thumbnail} alt={book.volumeInfo.title} />\n                    <p>{book.volumeInfo.title}</p>\n                    <button onClick={() => handleSuggestBook(book)}>Suggest this Book</button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Comment Form */}\n        <form className='comment-form' onSubmit={handleCommentSubmit}>\n          <textarea className='comment-text'\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            placeholder=\"Leave a comment...\"\n            rows=\"3\"\n            required\n          />\n          <button type=\"submit\">Post Comment</button>\n          <button type=\"button\" onClick={() => setIsSuggestingBook(!isSuggestingBook)}>Suggest a Book</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default FriendProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}