{"ast":null,"code":"var _jsxFileName = \"/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Verify the token with your backend\n          const response = await axios.get('/api/auth/verify', {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          setUser(response.data.user); // Set the user data from the response\n        } catch (error) {\n          console.error('Error verifying token:', error);\n          localStorage.removeItem('token'); // Remove the invalid token\n        }\n      }\n      setLoading(false); // Loading complete\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data.user); // Assuming the user data is returned on login\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post('/api/auth/register', {\n        name,\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data.user); // Assuming the user data is returned on registration\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this); // Replace with a more sophisticated loading indicator if needed\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","response","get","headers","data","error","console","removeItem","login","email","password","post","setItem","register","name","logout","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Verify the token with your backend\n          const response = await axios.get('/api/auth/verify', {\n            headers: { 'x-auth-token': token },\n          });\n          setUser(response.data.user); // Set the user data from the response\n        } catch (error) {\n          console.error('Error verifying token:', error);\n          localStorage.removeItem('token'); // Remove the invalid token\n        }\n      }\n      setLoading(false); // Loading complete\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', { email, password });\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data.user); // Assuming the user data is returned on login\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post('/api/auth/register', { name, email, password });\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data.user); // Assuming the user data is returned on registration\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n\n  if (loading) {\n    return <div>Loading...</div>; // Replace with a more sophisticated loading indicator if needed\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}