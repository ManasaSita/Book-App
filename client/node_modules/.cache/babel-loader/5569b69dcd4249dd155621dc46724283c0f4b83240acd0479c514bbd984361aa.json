{"ast":null,"code":"var _jsxFileName = \"/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { updateBookProgress, updateBookStatus, getCurrentlyReadingBooks } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [pagesRead, setPagesRead] = useState('');\n  const [bookIdToUpdate, setBookIdToUpdate] = useState(null);\n  const [totalPagesToUpdate, setTotalPagesToUpdate] = useState(0);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const {\n    user\n  } = useAuth();\n  const userId = user.payload.user.id;\n  console.log(\"User----\", userId);\n  useEffect(() => {\n    fetchCurrentlyReading();\n  }, []);\n  const fetchCurrentlyReading = async () => {\n    try {\n      const books = await getCurrentlyReadingBooks(userId);\n      console.log(\"Books======\", books);\n      setCurrentlyReading(books);\n    } catch (error) {\n      console.error('Error fetching currently reading books:', error.message);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent the form from refreshing the page\n\n    try {\n      console.log(\"updateBookProgress-------\", bookIdToUpdate, totalPagesToUpdate, pagesRead, userId);\n\n      // Calculate progress as a percentage and ensure it's capped at 100\n      const progress = Math.min(Math.round(Number(pagesRead) / totalPagesToUpdate * 100), 100);\n      console.log(\"progress---\", progress);\n\n      // Call API to update progress\n      await updateBookProgress({\n        userId,\n        bookId: bookIdToUpdate,\n        progress,\n        pagesRead\n      });\n\n      // Update the local state with the new progress\n      setCurrentlyReading(currentlyReading.map(book => book._id === bookIdToUpdate ? {\n        ...book,\n        progress: progress\n      } : book));\n\n      // Hide the input field after updating\n      setIsUpdating(false);\n      setPagesRead(''); // Clear the input field after submit\n    } catch (error) {\n      console.error('Error updating progress:', error);\n    }\n  };\n  const handleFinishBook = async id => {\n    try {\n      await updateBookStatus(id, 'read');\n      setCurrentlyReading(currentlyReading.filter(book => book._id !== id));\n    } catch (error) {\n      console.error('Error finishing book:', error);\n    }\n  };\n  const handleUpdateClick = (bookId, totalPages) => {\n    setBookIdToUpdate(bookId);\n    setTotalPagesToUpdate(totalPages);\n    setIsUpdating(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Currently Reading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-grid\",\n      children: currentlyReading.length > 0 ? currentlyReading.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book\",\n        id: book._id,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.thumbnail,\n          alt: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: book.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"author\",\n              children: [\"by \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: book.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), isUpdating && bookIdToUpdate === book._id ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [\"Pages Read:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-calc\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: book.pagesRead,\n                onChange: e => setPagesRead(e.target.value),\n                min: \"0\",\n                max: book.pageCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" / \", book.pageCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"percent\",\n              children: [\"Progress: \", book.progress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdateClick(book._id, book.pageCount),\n              children: \" Update Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFinishBook(book._id),\n              children: \"I've finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No book is marked as Reading. Start reading...!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"MBOB3U+2n8s9F6rteQSIoCWYNo4=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","updateBookProgress","updateBookStatus","getCurrentlyReadingBooks","useAuth","jsxDEV","_jsxDEV","Dashboard","_s","currentlyReading","setCurrentlyReading","pagesRead","setPagesRead","bookIdToUpdate","setBookIdToUpdate","totalPagesToUpdate","setTotalPagesToUpdate","isUpdating","setIsUpdating","user","userId","payload","id","console","log","fetchCurrentlyReading","books","error","message","handleSubmit","event","preventDefault","progress","Math","min","round","Number","bookId","map","book","_id","handleFinishBook","filter","handleUpdateClick","totalPages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","src","thumbnail","alt","title","author","onSubmit","type","value","onChange","e","target","max","pageCount","onClick","_c","$RefreshReg$"],"sources":["/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { updateBookProgress, updateBookStatus, getCurrentlyReadingBooks } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\n\nconst Dashboard = () => {\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [pagesRead, setPagesRead] = useState('');\n  const [bookIdToUpdate, setBookIdToUpdate] = useState(null);\n  const [totalPagesToUpdate, setTotalPagesToUpdate] = useState(0);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const { user } = useAuth();\n  const userId = user.payload.user.id;\n  console.log(\"User----\", userId);\n\n  useEffect(() => {\n    fetchCurrentlyReading();\n  }, []);\n\n  const fetchCurrentlyReading = async () => {\n    try {\n      const books = await getCurrentlyReadingBooks(userId);\n      console.log(\"Books======\", books);\n      setCurrentlyReading(books);\n    } catch (error) {\n      console.error('Error fetching currently reading books:', error.message);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevent the form from refreshing the page\n    \n    try {\n      console.log(\"updateBookProgress-------\", bookIdToUpdate, totalPagesToUpdate, pagesRead, userId);\n      \n      // Calculate progress as a percentage and ensure it's capped at 100\n      const progress = Math.min(Math.round((Number(pagesRead) / totalPagesToUpdate) * 100), 100);\n      console.log(\"progress---\", progress);\n\n      // Call API to update progress\n      await updateBookProgress({userId, bookId:bookIdToUpdate, progress, pagesRead});\n\n      // Update the local state with the new progress\n      setCurrentlyReading(currentlyReading.map(book =>\n        book._id === bookIdToUpdate ? { ...book, progress: progress } : book\n      ));\n\n      // Hide the input field after updating\n      setIsUpdating(false);\n      setPagesRead(''); // Clear the input field after submit\n\n    } catch (error) {\n      console.error('Error updating progress:', error);\n    }\n  };\n\n  const handleFinishBook = async (id) => {\n    try {\n      await updateBookStatus(id, 'read');\n      setCurrentlyReading(currentlyReading.filter(book => book._id !== id));\n    } catch (error) {\n      console.error('Error finishing book:', error);\n    }\n  };\n\n  const handleUpdateClick = (bookId, totalPages) => {\n    setBookIdToUpdate(bookId);\n    setTotalPagesToUpdate(totalPages);\n    setIsUpdating(true);\n  };\n\n  return (\n    <div className='dashboard'>\n      <h3>Currently Reading</h3> \n      <div className=\"book-grid\">\n        {currentlyReading.length > 0 ? (\n          currentlyReading.map(book => (\n            \n              <div className='book' id={book._id}>\n                <img src={book.thumbnail} alt={book.title} />\n                <div className='details'>\n                  <div className='title-author'>\n                    <p className='title'>{book.title}</p>\n                    <p className='author'>by <strong>{book.author}</strong></p>\n                  </div>\n                  \n\n                  {isUpdating && bookIdToUpdate === book._id ? (\n                    <form onSubmit={handleSubmit}>\n                      Pages Read:\n                      <div className='input-calc'>\n                        <input type=\"number\" value={book.pagesRead} onChange={(e) => setPagesRead(e.target.value)} min=\"0\" max={book.pageCount}/>\n                        <p> / {book.pageCount}</p>\n                      </div>\n                      \n                      <button type=\"submit\">Update Progress</button>\n                    </form>\n                  ) : (\n                    <div className='progress'>\n                      <div className='percent'>Progress: {book.progress}%</div>\n                      <button onClick={() => handleUpdateClick(book._id, book.pageCount)}> Update Progress</button>\n                      <button onClick={() => handleFinishBook(book._id)}>I've finished</button>\n                    </div>\n                  )}\n                </div>\n\n              </div>\n          ))\n        ) : (\n          <div>\n            <p>No book is marked as Reading. Start reading...!</p>\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}