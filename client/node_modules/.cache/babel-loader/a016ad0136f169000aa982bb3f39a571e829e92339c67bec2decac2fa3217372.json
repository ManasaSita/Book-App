{"ast":null,"code":"var _jsxFileName = \"/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport axios from 'axios'; // Make sure to install and import axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(undefined);\n  const login = useCallback(userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  }, []);\n  const logout = useCallback(() => {\n    setUser(null);\n    localStorage.removeItem('user');\n  }, []);\n  const refreshToken = useCallback(async () => {\n    try {\n      const response = await axios.post('/api/auth/refresh-token', {}, {\n        headers: {\n          'x-auth-token': user.token\n        }\n      });\n      const newUserData = {\n        ...user,\n        token: response.data.token\n      };\n      login(newUserData);\n      return newUserData.token;\n    } catch (error) {\n      console.error('Failed to refresh token:', error);\n      logout();\n      return null;\n    }\n  }, [user, login, logout]);\n  const handleExpiredToken = useCallback(async () => {\n    const newToken = await refreshToken();\n    if (newToken) {\n      // Retry the original request with the new token\n      // You'll need to implement this logic in your API calls\n    } else {\n      // Token refresh failed, redirect to login\n      logout();\n      // Redirect to login page\n    }\n  }, [refreshToken, logout]);\n  const initAuth = useCallback(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    } else {\n      setUser(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      initAuth,\n      handleExpiredToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"aYv50KlX4VE8/xy5N0V2W2+LgVs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","undefined","login","userData","localStorage","setItem","JSON","stringify","logout","removeItem","refreshToken","response","post","headers","token","newUserData","data","error","console","handleExpiredToken","newToken","initAuth","storedUser","getItem","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/manasa/Projects/UpGrad/Capestone Project/bookshelf-app/bookShelf/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\nimport axios from 'axios'; // Make sure to install and import axios\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(undefined);\n\n  const login = useCallback((userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  }, []);\n\n  const logout = useCallback(() => {\n    setUser(null);\n    localStorage.removeItem('user');\n  }, []);\n\n  const refreshToken = useCallback(async () => {\n    try {\n      const response = await axios.post('/api/auth/refresh-token', {}, {\n        headers: {\n          'x-auth-token': user.token\n        }\n      });\n      const newUserData = { ...user, token: response.data.token };\n      login(newUserData);\n      return newUserData.token;\n    } catch (error) {\n      console.error('Failed to refresh token:', error);\n      logout();\n      return null;\n    }\n  }, [user, login, logout]);\n\n  const handleExpiredToken = useCallback(async () => {\n    const newToken = await refreshToken();\n    if (newToken) {\n      // Retry the original request with the new token\n      // You'll need to implement this logic in your API calls\n    } else {\n      // Token refresh failed, redirect to login\n      logout();\n      // Redirect to login page\n    }\n  }, [refreshToken, logout]);\n\n  const initAuth = useCallback(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    } else {\n      setUser(null);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, initAuth, handleExpiredToken }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/E,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAAC;EAE3C,MAAMC,KAAK,GAAGX,WAAW,CAAEY,QAAQ,IAAK;IACtCH,OAAO,CAACG,QAAQ,CAAC;IACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,MAAM,GAAGjB,WAAW,CAAC,MAAM;IAC/BS,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGnB,WAAW,CAAC,YAAY;IAC3C,IAAI;MACF,MAAMoB,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC,EAAE;QAC/DC,OAAO,EAAE;UACP,cAAc,EAAEd,IAAI,CAACe;QACvB;MACF,CAAC,CAAC;MACF,MAAMC,WAAW,GAAG;QAAE,GAAGhB,IAAI;QAAEe,KAAK,EAAEH,QAAQ,CAACK,IAAI,CAACF;MAAM,CAAC;MAC3DZ,KAAK,CAACa,WAAW,CAAC;MAClB,OAAOA,WAAW,CAACD,KAAK;IAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDT,MAAM,CAAC,CAAC;MACR,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAACT,IAAI,EAAEG,KAAK,EAAEM,MAAM,CAAC,CAAC;EAEzB,MAAMW,kBAAkB,GAAG5B,WAAW,CAAC,YAAY;IACjD,MAAM6B,QAAQ,GAAG,MAAMV,YAAY,CAAC,CAAC;IACrC,IAAIU,QAAQ,EAAE;MACZ;MACA;IAAA,CACD,MAAM;MACL;MACAZ,MAAM,CAAC,CAAC;MACR;IACF;EACF,CAAC,EAAE,CAACE,YAAY,EAAEF,MAAM,CAAC,CAAC;EAE1B,MAAMa,QAAQ,GAAG9B,WAAW,CAAC,MAAM;IACjC,MAAM+B,UAAU,GAAGlB,YAAY,CAACmB,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAID,UAAU,EAAE;MACdtB,OAAO,CAACM,IAAI,CAACkB,KAAK,CAACF,UAAU,CAAC,CAAC;IACjC,CAAC,MAAM;MACLtB,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE3B,IAAI;MAAEG,KAAK;MAAEM,MAAM;MAAEa,QAAQ;MAAEF;IAAmB,CAAE;IAAAtB,QAAA,EAChFA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CAxDWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA0DzB,OAAO,MAAMoC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5C,UAAU,CAACM,WAAW,CAAC;AAAA;AAACsC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}